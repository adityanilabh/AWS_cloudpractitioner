    1. Valid Parentheses (done)
    2. Min Stack
    3. Largest Rectangle in Histogram
    4. Trapping Rain Water
    5. Evaluate Reverse Polish Notation
    6. Simplify Path
    7. Decode String
    8. Next Greater Element I
    9. Baseball Game
    10. Design a Stack With Increment Operation
    11. Remove All Adjacent Duplicates In String
    12. Backspace String Compare
    13. Online Stock Span
    14. Score of Parentheses
    15. Minimum Add to Make Parentheses Valid
    16. Remove Outermost Parentheses
    17. Implement Queue using Stacks
    18. Longest Valid Parentheses
    19. Decode String
    20. Design a Stack that supports push, pop, top, and retrieving the minimum element in constant time (Min Stack)
    21. Implement a basic calculator to evaluate a simple expression string (Basic Calculator)
    22. Implement a queue using stacks (Implement Queue using Stacks)
    23. Implement a stack using queues (Implement Stack using Queues)
    24. Check if a string is a valid expression with parantheses, square brackets, and curly braces (Valid Parenthesis String)
    25. Implement a stack which can return the minimum element in constant time (Min Stack)
    26. Find the nearest greater element on the right for each element in an array (Next Greater Element I)
    27. Implement a function to sort a stack (Sort a Stack)
    28. Implement a stack that efficiently supports push, pop, top, and retrieving the minimum element (Min Stack)
    29. Check if a given string is a valid parentheses expression (Valid Parentheses)
    30. Evaluate the value of an arithmetic expression in Reverse Polish Notation (Evaluate Reverse Polish Notation)

